# Generated by https://quicktype.io

from typing import List, Any

from .course import TypeEnum


class Data:
    id: int
    type: str
    assignment: str
    title: str
    sample_code: str
    instructions: str
    number: int
    sct: str
    pre_exercise_code: str
    solution: str
    hint: str
    attachments: None
    xp: int
    possible_answers: List[Any]
    feedbacks: List[Any]
    question: str
    course_id: int
    chapter_id: int
    runtime_config: None
    language: str

    def __init__(
        self,
        id: int,
        type: str,
        assignment: str,
        title: str,
        sample_code: str,
        instructions: str,
        number: int,
        sct: str,
        pre_exercise_code: str,
        solution: str,
        hint: str,
        attachments: None,
        xp: int,
        possible_answers: List[Any],
        feedbacks: List[Any],
        question: str,
        course_id: int,
        chapter_id: int,
        runtime_config: None,
        language: str,
    ) -> None:
        self.id = id
        self.type = type
        self.assignment = assignment
        self.title = title
        self.sample_code = sample_code
        self.instructions = instructions
        self.number = number
        self.sct = sct
        self.pre_exercise_code = pre_exercise_code
        self.solution = solution
        self.hint = hint
        self.attachments = attachments
        self.xp = xp
        self.possible_answers = possible_answers
        self.feedbacks = feedbacks
        self.question = question
        self.course_id = course_id
        self.chapter_id = chapter_id
        self.runtime_config = runtime_config
        self.language = language


class Exercise:
    data: Data
    id: int
    type: str
    version: str

    def __init__(self, data: Data, id: int, type: TypeEnum, version: str) -> None:
        self.data = data
        self.id = id
        self.type = type
        self.version = version
